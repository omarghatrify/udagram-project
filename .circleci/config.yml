version: 2.1

orbs:
  node: circleci/node@4.1.0
  aws-cli: circleci/aws-cli@2.0.3
  s3: circleci/aws-s3@3.0.0
  eb: circleci/aws-elastic-beanstalk@2.0.1

jobs:
  build_backend:
    docker:
      - image: "cimg/node:lts"
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-v1-api-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - node-v1-api-{{ .Branch }}-
            - node-v1-api-
      - run: 
          name: 'Install Dependencies'
          command: "cd udagram-api && npm install --save"
      - save_cache:
          paths:
            - ~/usr/local/lib/node_modules 
          key: node-v1-api-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run:
          name: "Build API"
          command: "cd udagram-api && npm run build"
      - persist_to_workspace:
          root: .
          paths:
            - 'udagram-api/www'
  build_frontend:
    docker:
      - image: "cimg/node:lts"
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-v1-front-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - node-v1-front-{{ .Branch }}-
            - node-v1-front-
      - run: 
          name: 'Install Dependencies'
          command: "cd udagram-frontend && npm install --save"
      - save_cache:
          paths:
            - ~/usr/local/lib/node_modules 
          key: node-v1-front-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run:
          name: "Build Frontend"
          command: |
            cd udagram-frontend
            npm run build
      - persist_to_workspace:
          root: .
          paths:
            - 'udagram-frontend/www'
  deploy_backend:
    docker:
      - image: "cimg/base:stable"
    steps:
      - attach_workspace:
          at: .
      #- run: 
  deploy_frontend:
    docker:
      - image: "cimg/base:stable"
    steps:
      - aws-cli/setup
      - s3/sync:
        arguments: |
          --acl public-read
          --delete
        from: "udagram-frontend/www"
        to: "s3://9951-udagram/"
      
    
workflows:
  build_deploy:
    jobs:
      - build_frontend
      - build_backend
      # - deploy_backend:
      #     requires:
      #       - build_backend
      - deploy_frontend:
          requires:
            - build_frontend