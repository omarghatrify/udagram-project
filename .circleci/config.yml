version: 2.1

orbs:
  node: circleci/node@4.1.0
  aws-cli: circleci/aws-cli@2.0.3
  s3: circleci/aws-s3@3.0.0
  eb: circleci/aws-elastic-beanstalk@2.0.1

jobs:
  build_backend:
    docker:
      - image: "cimg/node:lts"
    steps:
      - checkout
      - restore_cache:
          keys:
            - node_modules-api-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - node_modules-api-{{ .Branch }}-
            - node_modules-api-
      - run: 
          name: 'Install Dependencies'
          command: "cd udagram-api && npm install --save"
      - save_cache:
          paths:
            - udagram-api/node_modules 
          key: node_modules-api-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run:
          name: "Build API"
          command: "cd udagram-api && npm run build"
      - persist_to_workspace:
          root: .
          paths:
            - 'udagram-api/www'
  build_frontend:
    docker:
      - image: "cimg/node:lts"
    steps:
      - checkout
      - restore_cache:
          keys:
            - node_modules-front-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - node_modules-front-{{ .Branch }}-
            - node_modules-front-
      - run: 
          name: 'Install Dependencies'
          command: "cd udagram-frontend && npm install --save"
      - save_cache:
          paths:
            - udagram-frontend/node_modules 
          key: node_modules-front-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run:
          name: "Build Frontend"
          command: |
            cd udagram-frontend
            npx ng build --prod
      - persist_to_workspace:
          root: .
          paths:
            - 'udagram-frontend/www'
  deploy_frontend:
    docker:
      - image: "cimg/base:stable"
    parameters:
      bucket:
        type: string
        default: BUCKET
    steps:
      - aws-cli/setup
      - attach_workspace:
          at: .
      - s3/sync:
          arguments: "--acl public-read --delete"
          from: "udagram-frontend/www"
          to: "s3://<parameters.bucket>/"
        
    
workflows:
  frontend:
    jobs:
      - build_frontend
      - deploy_frontend:
          bucket: "9951-udagram"
          requires:
            - build_frontend
  backend:
    jobs:
      - build_backend
      - eb/deploy:
          requires:
            - build_backend
          app-dir: "udagram-api/www"
          application-name: "udagram-api"
          environment-name: "udagram-api-dev"
